import discord
from discord.ext import commands
from discord.ui import View, Button, Modal, TextInput
from discord import app_commands
import yt_dlp
import asyncio
import os
from myserver import server_on
from flask import Flask
from threading import Thread

app = Flask('')

@app.route('/')
def home():
    return "I'm alive"

def run():
  app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run)
    t.start()

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î intents
intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.guilds = True
intents.voice_states = True

bot = commands.Bot(command_prefix='!', intents=intents)

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Global
song_queue = {}          # ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á
current_song = {}        # ‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
loop_status = {}         # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loop
previous_songs = {}      # ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö back_button)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î stream ‡∏à‡∏≤‡∏Å yt-dlp
def get_stream_url(url):
    ydl_opts = {
        'format': 'bestaudio[ext=m4a]/bestaudio/best',
        'quiet': False,  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô False ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π log
        'no_warnings': False,
        'default_search': 'auto',
    }
    try:
        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=False)
            print(f"[DEBUG] Extracted info: {info}")  # ‡πÄ‡∏û‡∏¥‡πà‡∏° log
            if 'entries' in info:
                info = info['entries'][0]
            return info['url'], info.get('title', 'Unknown Title')
    except Exception as e:
        print(f"‚ö†Ô∏è Error extracting info: {e}")
        return None, None



async def play_next(ctx):
    guild_id = ctx.guild.id

    if loop_status.get(guild_id, False) and current_song.get(guild_id):
        url, title = current_song[guild_id]
        stream_url, _ = get_stream_url(url)
        if not stream_url:
            if isinstance(ctx, commands.Context):
                await ctx.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ")
            else:
                await ctx.followup.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ")
            return

        source = discord.FFmpegPCMAudio(stream_url)
        voice_client = ctx.guild.voice_client

        if voice_client is None or not voice_client.is_connected():
            if ctx.author.voice:
                voice_client = await ctx.author.voice.channel.connect()
            else:
                if isinstance(ctx, commands.Context):
                    await ctx.send("‚ùó ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á")
                else:
                    await ctx.followup.send("‚ùó ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á")
                return

        voice_client.play(source, after=lambda e: bot.loop.create_task(play_next(ctx)))
        if isinstance(ctx, commands.Context):
            await ctx.send(f"üîÅ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥: {title}")
        else:
            await ctx.followup.send(f"üîÅ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏ã‡πâ‡∏≥: {title}")

        return

    if song_queue.get(guild_id) and len(song_queue[guild_id]) > 0:
        url, title = song_queue[guild_id].pop(0)
        stream_url, _ = get_stream_url(url)

        if not stream_url:
            if isinstance(ctx, commands.Context):
                await ctx.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÑ‡∏î‡πâ")
            else:
                await ctx.followup.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ‡πÑ‡∏î‡πâ")
            return

        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤ previous_songs ‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
        if guild_id not in previous_songs:
            previous_songs[guild_id] = []
        if current_song.get(guild_id):
            previous_songs[guild_id].append(current_song[guild_id])
        current_song[guild_id] = (url, title)

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö voice client
        voice_client = ctx.guild.voice_client
        if voice_client is None or not voice_client.is_connected():
            if ctx.author.voice:
                voice_client = await ctx.author.voice.channel.connect()
            else:
                if isinstance(ctx, commands.Context):
                    await ctx.send("‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô")
                else:
                    await ctx.followup.send("‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô")
                return

        source = discord.FFmpegPCMAudio(stream_url)
        voice_client.play(source, after=lambda e: bot.loop.create_task(play_next(ctx)))

        if isinstance(ctx, commands.Context):
            await ctx.send(f"üé∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: {title}")
        else:
            await ctx.followup.send(f"üé∂ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô: {title}")

    else:
        voice_client = ctx.guild.voice_client
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()

        if isinstance(ctx, commands.Context):
            await ctx.send("‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏ö‡∏≠‡∏ó‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á")

        current_song.pop(guild_id, None)


class AddSongModal(Modal, title="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á"):
    url_input = TextInput(
        label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏û‡∏•‡∏á",
        placeholder="https://youtube.com/watch?v=... ",
        required=True,
    )

    async def on_submit(self, interaction: discord.Interaction):
        url = self.url_input.value
        guild_id = interaction.guild.id

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏Å‡πà‡∏≠‡∏ô
        if not url.startswith(("https://youtube.com",  "https://www.youtube.com",  "https://youtu.be")): 
            return await interaction.followup.send("‚ö†Ô∏è ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå YouTube", ephemeral=True)

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞ defer ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
        if not interaction.response.is_done():
            await interaction.response.defer(ephemeral=True)
        else:
            return await interaction.followup.send("‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

        # ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á
        stream_url, title = get_stream_url(url)
        if not stream_url:
            return await interaction.followup.send(
                "‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ\n"
                "‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏à‡∏≤‡∏Å:\n"
                "- ‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n"
                "- ‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏ñ‡∏π‡∏Å‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå\n"
                "- ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå",
                ephemeral=True
            )

        # ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á‡∏•‡∏á‡∏Ñ‡∏¥‡∏ß
        if guild_id not in song_queue:
            song_queue[guild_id] = []
        song_queue[guild_id].append((url, title))
        await interaction.followup.send(f"üì• ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß: {title}", ephemeral=True)

        # ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á
        voice_client = interaction.guild.voice_client
        if not voice_client or not voice_client.is_connected():
            if interaction.user.voice:
                voice_client = await interaction.user.voice.channel.connect()
            else:
                return await interaction.followup.send("‚ùó ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô", ephemeral=True)

        # ‚úÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô
        if not voice_client.is_playing() and not voice_client.is_paused():
            await play_next(interaction)

# ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ Global
song_queue = {}          # ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á
current_song = {}        # ‡πÄ‡∏û‡∏•‡∏á‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
loop_status = {}         # ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ loop
previous_songs = {}      # ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß

class FullCommandButtonView(View):
    def __init__(self, ctx):
        super().__init__(timeout=None)
        self.ctx = ctx

    @discord.ui.button(label="‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏•‡∏á", style=discord.ButtonStyle.success, emoji="üìã", row=0)
    async def queue_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        guild_id = interaction.guild.id
        if guild_id not in song_queue or not song_queue[guild_id]:
            await interaction.response.send_message("üì≠ ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤", ephemeral=True)
        else:
            message = "**üé∂ ‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏•‡∏á:**\n"
            for i, (_, title) in enumerate(song_queue[guild_id], 1):
                message += f"{i}. {title}\n"
            await interaction.response.send_message(message, ephemeral=True)

    @discord.ui.button(label="‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏û‡∏•‡∏á", style=discord.ButtonStyle.blurple, emoji="‚ûï", row=0)
    async def add_song_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        await interaction.response.send_modal(AddSongModal())


    @discord.ui.button(label="‡πÄ‡∏•‡πà‡∏ô / ‡∏´‡∏¢‡∏∏‡∏î", style=discord.ButtonStyle.secondary, emoji="‚èØÔ∏è", row=0)
    async def play_pause_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        if self.ctx.voice_client.is_paused():
            self.ctx.voice_client.resume()
            await interaction.response.send_message("‚ñ∂Ô∏è ‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ï‡πà‡∏≠", ephemeral=True)
        else:
            self.ctx.voice_client.pause()
            await interaction.response.send_message("‚è∏Ô∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏û‡∏•‡∏á‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß", ephemeral=True)


    @discord.ui.button(label="‡∏•‡∏π‡∏õ‚Äç", style=discord.ButtonStyle.secondary, emoji="üîÅ", row=0)
    async def loop_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        guild_id = interaction.guild.id
        loop_status[guild_id] = not loop_status.get(guild_id, False)
        status = "‡πÄ‡∏õ‡∏¥‡∏î" if loop_status[guild_id] else "‡∏õ‡∏¥‡∏î"
        await interaction.response.send_message(f"üîÅ ‡πÇ‡∏´‡∏°‡∏î‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ñ‡∏π‡∏Å {status}", ephemeral=True)


    @discord.ui.button(label="‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö", style=discord.ButtonStyle.grey, emoji="‚èÆÔ∏è", row=1)
    async def back_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        guild_id = interaction.guild.id

        if guild_id not in previous_songs or len(previous_songs[guild_id]) < 2:
            return await interaction.response.send_message("‚ùó ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏ó‡∏µ‡πà‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏î‡πâ", ephemeral=True)

        if not interaction.response.is_done():
            await interaction.response.defer(ephemeral=True)
        else:
            return await interaction.followup.send("‚ö†Ô∏è ‡∏Å‡∏≤‡∏£‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß", ephemeral=True)

        prev_url, prev_title = previous_songs[guild_id][-2]
        stream_url, title = get_stream_url(prev_url)
        voice_client = interaction.guild.voice_client

        if not stream_url:
            return await interaction.followup.send("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏î‡πâ", ephemeral=True)

        if voice_client and voice_client.is_playing():
            voice_client.stop()

        source = discord.FFmpegPCMAudio(stream_url)
        voice_client.play(source, after=lambda e: self.ctx.bot.loop.create_task(play_next(interaction)))
        previous_songs[guild_id].append((prev_url, prev_title))
        await interaction.followup.send(f"‚èÆÔ∏è ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ: {title}", ephemeral=True)


    @discord.ui.button(label="‡∏Ç‡πâ‡∏≤‡∏°", style=discord.ButtonStyle.grey, emoji="‚è≠Ô∏è", row=1)
    async def skip_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        if self.ctx.voice_client and self.ctx.voice_client.is_playing():
            self.ctx.voice_client.stop()
            await interaction.response.send_message("‚è≠Ô∏è ‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏û‡∏•‡∏á", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùó ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏û‡∏•‡∏á‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏•‡πà‡∏ô", ephemeral=True)


    @discord.ui.button(label="‡∏≠‡∏≠‡∏Å", style=discord.ButtonStyle.red, emoji="‚èπÔ∏è", row=1)
    async def stop_button(self, interaction: discord.Interaction, button: Button):
        if interaction.user != self.ctx.author:
            await interaction.response.send_message("‚ùå ‡∏Ñ‡∏∏‡∏ì‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏µ‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á  !p  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô", ephemeral=True)
            return

        guild_id = interaction.guild.id
        if self.ctx.voice_client:
            await self.ctx.voice_client.disconnect()
            song_queue[guild_id] = []
            loop_status[guild_id] = False
            current_song[guild_id] = None
            await interaction.response.send_message("‚èπÔ∏è ‡∏´‡∏¢‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùó ‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á", ephemeral=True)


@bot.command(name='p')
async def open_controls(ctx):
    if ctx.author.voice is None:
        await ctx.send("‚ùó ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏∞")
        return
    if ctx.voice_client is None:
        await ctx.author.voice.channel.connect(timeout=60.0, reconnect=True)
    view = FullCommandButtonView(ctx)
    await ctx.send("üéõÔ∏è **‡πÅ‡∏ú‡∏á‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡πÄ‡∏û‡∏•‡∏á**", view=view)


@bot.event
async def on_ready():
    print("Bot Started!")
    synced = await bot.tree.sync()
    print(f"{len(synced)} command(s)")


@bot.event
async def on_member_join(member):
    channel = bot.get_channel(1371431002093912126)
    if channel:
        embed = discord.Embed(
            title="üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏´‡∏°‡πà!!",
            description=f"{member.mention} ‡πÄ‡∏î‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏ï‡∏π... ‡∏≠‡∏≤‡∏ì‡∏≤‡∏à‡∏±‡∏Å‡∏£ MisterOue ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏∂‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß",
            color=discord.Color.green()
        )
        embed.set_thumbnail(url=member.avatar.url)
        await channel.send(embed=embed)


@bot.event
async def on_member_remove(member):
    channel = bot.get_channel(1371431002093912126)
    if channel:
        embed = discord.Embed(
            title="üö™ ‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏à‡∏≤‡∏Å‡πÑ‡∏õ...",
            description=f"‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏õ‡∏¥‡∏î‡∏•‡∏á... ‡πÅ‡∏ï‡πà‡πÇ‡∏ä‡∏Ñ‡∏ä‡∏∞‡∏ï‡∏≤‡∏Ç‡∏≠‡∏á {member.mention} ‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô MisterOue",
            color=discord.Color.red()
        )
        embed.set_thumbnail(url=member.avatar.url)
        await channel.send(embed=embed)

@bot.command()
@commands.is_owner()  # ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á‡∏ö‡∏≠‡∏ó
async def say(ctx, *, message: str = None):
    if message is None:
        await ctx.send("‚ùó ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÄ‡∏ä‡πà‡∏ô `!say ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ`")
        return

    embed = discord.Embed(
        description=message,
        color=discord.Color.gold()
    )
    embed.set_author(name="üì¢ ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Ç‡πà‡∏≤‡∏ß‡∏™‡∏≤‡∏£", icon_url=ctx.bot.user.avatar.url)
    await ctx.send(embed=embed)


server_on()
bot.run(os.getenv('TOKEN'))